#+TITLE: ChaosNoise
* Overview
The =chaosnoise= algorithm is noise generator that uses
a chaos function to it's sound.

At the core, chaosnoise is a essentially a 2-pole filter
with an unstable filter coefficient and a nonlinearity.
In other words, it gets its noise doing things DSP engineers
work very hard to avoid under normal circumstances.

The underlying chaos function is largely based on the one
found in the Crackle Ugen found in SuperCollider. In this
implementation, however, there is an added =rate= parameter
similar to the one found in @!(ref "bitnoise")!@. This
is can be used to change the tone quality of the algorithm.
* Tangled Files
This tangles to =chaosnoise.c= and =chaosnoise.h=. Defining
=SK_CHAOSNOISE_PRIV= will expose the core struct in the
header file.
* Struct
Data for ChaosNoise is contained in a struct called
=chaosnoise=.
* Filter Memory
chaosnoise is technically a 2-pole filter, requiring
memory for 2 samples of signal.
* Sample and Hold Constants and Parameters
The signal is clocked with a sample and hold generator. This
sample and hold will use a fixed-point phasor to keep track
of time, similar to the ones found in @!(ref "bitnoise")!@ and
@!(ref "rline")!@. More details on how this works can be
found in these pages.

A 32-bit integer called =phs= keeps track of the phase
position.

The constant =SK_CHAOSNOISE_PHSMAX= defines the maximum
length (and resolution) of the phasor, set to be
=0x1000000=.

The constant =SK_CHAOSNOISE_PHSMSK= defines the masking
value of the phasor, set to be =0x0FFFFFF=.

The floating point value =maxlens= is
=SK_CHAOSNOISE_PHSMAX=, converted to seconds. It is used
to calculate the increment amount for the phase position.
When a rate value (in units of Hz, or cycles/second) get
multiplied by this value, the result is a value in units
of phase cycles.
* Parameters
** Chaos
The =chaos= parameter is variable that controls the chaos
level. It is typically a value between 1 and 2.

It can be set with =sk_chaosnoise_chaos=.
** Rate
The =rate= value controls the rate of computation. This
is a value measure in Hertz.

It can be set with =sk_chaosnoise_rate=.
* Initialization
Initialized with =sk_chaosnoise_init=. Sampling rate and an
initial value must be supplied as arguments. The initial
value is a floating point value that expects to be in range
0-1.
* Computation
A single sample of audio is computed with
=sk_chaosnoise_tick=.

First, the phasor value is updated by an increment value,
computed with =rate*maxlens=.

If the phasor reaches (or goes above) the end, a new
sample gets computed.

This uses the following difference equation:

$$
y(n) = | c y(n - 1) - y(n - 2) - \gamma |
$$

Where $c$ is the chaos value, and $\gamma$ is a nonlinearity
set to be =0.05=.

After the output value is computed, the coefficients are
updated.

The output is always set to be the filter memory variable
=y[0]=.
