#+TITLE: LPF
* Overview
=LPF= implements a fairly common 2-pole resonant
low-pass IIR filter.
* Tangled Files
=lpf.c= and =lpf.h=.
* Struct and Initialization
The struct for LPF is called =sk_lpf=.

LPF is initialized with =sk_lpf_init=.

Being a 2-pole filter requires 2 samples of memory,
and 3 filter coefficients.

A =update= flag is used to implement @!(ref
"parameter_caching" "parameter caching")!@. If either
cutoff or frequency is set, it will cause the filter
coefficients to update themselves.
* Parameters
** Cutoff Frequency
The cutoff frequency is est with =sk_lpf_freq=.

Cutoff frequency of the lowpass filter, in Hertz.

Uses @!(ref "parameter_caching" "parameter caching")!@
to save on computing coefficients if it doesn't need
to compute them.
** Q Factor
The Q factor is set with =sk_lpf_q=.
The Q factor controls how much resonance there is. Should
be a positive non-zero value. A value of 1.0 is passive,
greater than 1.0 will cause resonance. Less than 1? Not
sure.

Uses @!(ref "parameter_caching" "parameter caching")!@
to save on computing coefficients if it doesn't need
to compute them.
* Computation
A single sample of audio is computed with
=sk_lpf_tick=.

Before a filter is computed, the =update= flag is
checked to see if it is set. If so, the filter
coefficients must be updated.

To compute new coefficients, frequency must be converted
from cycles-per-second to radians-per-sample. Multiplying
by @!(smallfig "lpf_2pi" "2\\pi")!@ gives radians, then
dividing by the sampling rate (or multiplying by the
inverse, big T @!(smallfig "lpf_bigt" "T")!@, converts
from seconds to radians.

The intermediate variables =C= and =D= are computed next,
followed by the alpha and beta filter coefficients. These
look like the remains from some bilinear transform from
an S-plane filter, but I'm not sure.

The update flag is then reset back to zero.

With all the up-to-date coefficients, computing filter
is a matter of computing the difference equation and
updating the filter memory.

The output itself seems to be effectively boosting
the filter memory. I am not sure why it is doing that.
