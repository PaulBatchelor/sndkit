#+TITLE: Env
* Overview
This document describes =env=, a trigger based envelope
generator with adjustable attack, hold, and release times.
This envelope is produced by feeding a gate signal into
a smoothing filter. The output returns an exponetial
envelope with very nice-sounding curves: a convex rise,
and a concave fall.

This sort of envelope is very ideal for percussive sounds
and for mimicking analogue synthesizers. The drawbacks
mainly have to do with precision. Attack and release
times are specified as time constants, which are a little
bit less intuitive than using seconds. The signal
generated is in range 0 to 1, but it will never reach 1
exactly.
* Tangled Files
=env.c= and =env.h=, respectively.
* Components
** Timer
A timer is used to produce a gate signal of a particular
duration. This kicks on during the hold portion of
the signal.

This timer is stored in a @!(ref "normalized_range"
"normalized range")!@, and is updated by a normalized
floating-point incrementor value.
** Filter
The filter used is a pretty typical 
@!(ref "smoother" "one-pole lowpass filter")!@, but with
two parameters for the release and attack portions of
the envelope.
** State Management
The envelope has three main states: attack, hold, and
release. There is also a zero state to inidicate that
envelope is not playing anything.
** Previous Output
The output from the previous sample is stored.
* Parameters
** Attack Time (in tau units)
** Release Time (in tau units)
** Hold Time (in seconds)
* A Decent Epsilon Value
To break out of attack mode, and to have a clean silence
after release mode, a very small value known as an =epsilon=
will be used. This value should be small enough to be
perceptually perfect, and large enough to be numerically
stable.

High-quality tends to be 24-bit, so anything less than
=1/2^24= can be ignored, which is roughly =5e-8= (rounded
down), which
I *think* should be reasonable enough for 32-bit
floating-point numbers.
* Computation
The envelope will wait for a trigger. A trigger at any
point will cause a retrigger. Some work will be done to
write in behavior that will prevent clicks from happening.

When the trigger occurs, the state is set to attack,
and the gate signal is turned on. The attack time parameters
are updated at this point, and the filter is configured
to use the attack time parameters.

In attack mode, the on-gate signal is put through the
filter. The output is checked to see if exceeds a threshold
reasonably close to 1. If it does, that value is held,
and the state is set to be hold mode.

The timer is stored in a @!(ref "normalized_range"
"normalized range")!@, which allows the hold time to be
adjustable while it is in hold mode. During the period
in hold mode, the output signal will be the last returned
value of the attack envelope.

When timer reaches the end, the envelope goes into release
mode. This is very similar to to attack mode, except that
it uses release time coefficients and the input
signal is a off-gate.

The envelope will remain in release mode until the output
signal goes below the epsilon threshold. At this point,
the envelope will go into zero mode, where no computation
happens and zero is returned.
